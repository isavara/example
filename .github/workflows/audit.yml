name: Audit

on:
  push:
    branches:
      - 'BFUEM-*'
      - main
  pull_request:
    branches:
      - main

jobs:
  validate-workflow-conditions:
    name: Validate Workflow Conditions
    runs-on: gcp-public-runner-label-1
    outputs:
      proceed: ${{ steps.check.outputs.proceed }}
    steps:
      - id: check
        shell: bash
        run: |
          # Define default values
          EVENT_NAME="${{ github.event_name }}"
          PR_MERGED="false"

          # Check for pull_request event to populate PR_MERGED
          if [[ "$EVENT_NAME" == "pull_request" ]]; then
            PR_MERGED="${{ github.event.pull_request.merged }}"
          fi

          # Log the variables to understand their values
          echo "EVENT_NAME: $EVENT_NAME"
          echo "PR_MERGED: $PR_MERGED"

          # Skip checks for pull requests that are not yet merged
          if [[ "$EVENT_NAME" == "pull_request" && "$PR_MERGED" == "false" ]]; then
            echo "proceed=false" >> $GITHUB_OUTPUT
          else
            echo "proceed=true" >> $GITHUB_OUTPUT
          fi

      - name: Print Proceed Value
        run: echo "Proceed value is: ${{ steps.check.outputs.proceed }}"

  test:
    name: Job to run the tests
    runs-on: gcp-public-runner-label-1
    needs:
      - validate-workflow-conditions
    if: ${{ needs.validate-workflow-conditions.outputs.proceed == 'true' }}
    defaults:
      run:
        working-directory: /home/githubrunner/actions-runner/_work/example/example/test

    steps:
      - name: Present working directory
        run: pwd
        
      - name: Check out this repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: test
          
      - name: Extract Branch Name
        id: get-branch-name
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            echo "branch_name=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "branch_name=${{ github.head_ref }}" >> $GITHUB_OUTPUT
          fi

      - name: Run branch and commit message checks
        run: |
          chmod +x /home/githubrunner/actions-runner/_work/example/example/test/.githooks/validate-branch-and-commit-msg
          export GIT_COMMIT_MSG_FILE=$(mktemp)
          echo "${{ github.event.head_commit.message }}" > $GIT_COMMIT_MSG_FILE
          export GIT_BRANCH_NAME="${{ steps.get-branch-name.outputs.branch_name }}"
          echo "Branch name: $GIT_BRANCH_NAME"
          /home/githubrunner/actions-runner/_work/example/example/test/.githooks/validate-branch-and-commit-msg $GIT_COMMIT_MSG_FILE

  update-mcm-gke:
    name: Update MCM on GKE
    runs-on: gcp-public-runner-label-1
    environment: dev
    needs:
      - validate-workflow-conditions
    if: ${{ needs.validate-workflow-conditions.outputs.proceed == 'true' }}
    steps:
      - name: Print Step#1 in deploy-mcm-gke job
        run: echo "The job update-mcm-gke is running..."
      - name: Print PATH
        run: echo $PATH
